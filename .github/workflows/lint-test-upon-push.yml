# vim: set tabstop=2 softtabstop=2 shiftwidth=2 expandtab:

name: Lint and test after every push or pull request
on:
  push:
  pull_request:
  workflow_call:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Linting code
    runs-on: ubuntu-latest
    container: python:3
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install black and flake8
        run: python -m pip install black flake8
      - name: Lint using black
        run: python -m black --check src
      - name: Lint using flake8
        run: python -m flake8 src

  test:
    name: Run tests (${{ matrix.os }}, ${{ matrix.env }})
    needs: lint
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: true
      matrix:
        os: 
          - ubuntu-latest
          # - windows-latest  # see issue #156
          - macos-latest
        env:
          - ci/python_310.yaml
          - ci/python_39.yaml
          - ci/python_38.yaml

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install JVM
        uses: actions/setup-java@v3
        with: 
          distribution: temurin
          java-version: 11

      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          activate-environment: r5py
          channel-priority: strict
          channels: conda-forge
          environment-file: ${{ matrix.env }}
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true

      - name: On Windows, resort JDK/GDAL conflicts
        if: matrix.os == 'windows-latest'
        run: mamba install --force-reinstall gdal libgdal libzip freetype

      - name: Test whether fiona can be imported
        run: python -c "import fiona"

      - name: Make sure pytest{,-cov,-lazy-fixture} are installed
        shell: bash -l {0}
        run: mamba install -c conda-forge pytest pytest-cov pytest-lazy-fixture

      - name: Check environment
        shell: bash -l {0}
        run: |
          conda info
          conda list

      - name: Test r5py
        run: python -m pytest

      - name: Update codecov.io
        uses: codecov/codecov-action@v3.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
